@{
    ViewData["Title"] = "Home Page";
    var username = ViewData["Username"] as string;
    List<TaskModel> allTasks = ViewBag.Tasks;
    List<TaskModel> waitingTasks = ViewBag.WaitingTasks;
    List<TaskModel> inWorkTasks = ViewBag.InWorkTasks;
    List<TaskModel> completedTasks = ViewBag.CompletedTasks;
}

<link href="~/css/index.css" rel="stylesheet" />
<div>
    <div style="width: 100%;">
        <div class="index-news">
            <svg class="icon" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-newspaper h-4 w-4 text-muted-foreground shrink-0" data-lov-id="src/components/news/NewsTicker.tsx:30:6" data-lov-name="Newspaper" data-component-path="src/components/news/NewsTicker.tsx" data-component-line="30" data-component-file="NewsTicker.tsx" data-component-name="Newspaper" data-component-content="%7B%22className%22%3A%22h-4%20w-4%20text-muted-foreground%20shrink-0%22%7D"><path d="M4 22h16a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2H8a2 2 0 0 0-2 2v16a2 2 0 0 1-2 2Zm0 0a2 2 0 0 1-2-2v-9c0-1.1.9-2 2-2h2"></path><path d="M18 14h-8"></path><path d="M15 18h-5"></path><path d="M10 6h8v4h-8V6Z"></path></svg>
            <div class="index-news-line">
                <div class="running-line">
                    Здарова, @username Новый регламент обслуживания серверного оборудования
                </div>
            </div>
        </div>
    </div>

    <div class="dashboard-status-cards">

        <div class="dashboard-card issues-card">
            <div class="card-header">
                <h3 class="card-header-title">
                    <div class="card-header-icon-container">
                        <svg class="issue-card-icon" data-lov-name="svg" data-component-line="134" data-component-name="svg" data-component-content="%7B%22className%22%3A%22w-5%20h-5%20text-indigo-600%22%7D" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path data-lov-name="path" data-component-line="135" data-component-name="path" data-component-content="%7B%7D" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path></svg>
                    </div>
                    Активные задачи
                </h3>
            </div>

            <div class="card-content">
                <div style="justify-content: space-between; align-items: center; display: flex;">
                    <div>
                        <p class="issue-count"> @(waitingTasks.Count + inWorkTasks.Count)</p>
                        <p class="issue-content-text">Требуют внимания</p>
                    </div>
                    <div>
                        <div>
                        </div>
                    </div>
                </div>
                <button class="card-button">Просмотреть все</button>
            </div>

        </div>


        <div class="dashboard-card users-card">
            <div class="card-header">
                <h3 class="card-header-title">
                    <div class="card-header-icon-container">
                        <svg class="issue-card-icon" data-lov-name="svg" data-component-line="163" data-component-name="svg" data-component-content="%7B%22className%22%3A%22w-5%20h-5%20text-purple-600%22%7D" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path data-lov-name="path" data-component-line="164" data-component-name="path" data-component-content="%7B%7D" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path></svg>
                    </div>
                    Сотрудники
                </h3>

            </div>
            <div class="card-content">
                <div style="gap: 1rem;grid-template-columns: repeat(2, minmax(0, 1fr));display: grid;">
                    <div style="text-align: center;padding: .75rem;background-color: #ffffff80;border-radius: .5rem;">
                        <p style="font-weight: 700; font-size: 1.5rem; line-height: 2rem; margin: 0; color: black">@ViewBag.UsersCount</p>
                        <p style="margin: 0; color:">Всего</p>
                    </div>
                    <div style="text-align: center;padding: .75rem;background-color: #ffffff80;border-radius: .5rem;">
                        <p style="font-weight: 700; font-size: 1.5rem; line-height: 2rem; margin: 0; color: black">@ViewBag.AdminsCount </p>
                        <p style="margin: 0">Админы</p>
                    </div>
                </div>
                <form asp-action="Index" asp-controller="User">
                    <button class="card-button">Управление</button>
                </form>
            </div>
        </div>
    </div>

    <div class="main-dashboard">
        <div class="dashboard-card">
            <div class="dashboard-card-title">
                <div>
                    <h3>Объявления</h3>
                    <p>Важная информация для сотрудников</p>
                </div>
                <button class="dashboard-card-button" onclick="openModalAdvertisement()">
                    <svg width="1rem" height="1rem" class="w-6 h-6 text-red-500">
                        <use href="#icon-plus"></use>
                    </svg>
                    Добавить
                </button>
            </div>

            <div class="modal" id="addAnnouncementModal">
                <div class="modal-content">
                    <div>
                        <h2>Новое объявление</h2>
                        <p>Создайте новое объявление для сотрудников</p>
                    </div>
                    <form asp-controller="Advertisement" asp-action="Create" method="post">
                        <div class="class=" modal-advertisement-form"">
                            <div>
                                <label for="title">Заголовок</label>
                                <input type="text" id="title" name="Title" required>
                            </div>
                            <div>
                                <label for="content">Содержание</label>
                                <textarea id="content" name="Description" required></textarea>
                            </div>
                        </div>
                        <div style="justify-content: flex-end; flex-direction: row; display: flex;">
                            <button class="button cancel-modal" onclick="closeModal()">Отменить</button>
                            <button type="submit" class="button submit-advertisement">Сохранить</button>
                        </div>
                    </form>
                    <button class="modal-close" onclick="closeModal()">&times;</button>
                </div>
            </div>

            
            <div class="dashboard-card-body">
                @foreach (Advertisement advertisement in ViewBag.Advertisements)
                {
                    <div class="dashboard-card-advertisement">
                        <div class="dashboard-card-advertisement-container">
                            <form asp-action="Delete" asp-controller="Advertisement" asp-route-id="@advertisement.Id" method="post">
                                <button type="submit" style="background-color: white; width: 1rem; height: 1rem; position: relative; float: right; margin-top: -25px; margin-right: -5px">
                                    <svg width="1.5rem" height="1.5rem" viewBox="-3.2 -3.2 38.40 38.40" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:sketch="http://www.bohemiancoding.com/sketch/ns">
                                        <g stroke-width="0"></g>
                                        <g stroke-linecap="round" stroke-linejoin="round" stroke="currentColor" stroke-width="1"></g>
                                        <g stroke="currentColor" color="black">
                                            <path d="M10.771 8.518c-1.144 0.215-2.83 2.171-2.086 2.915l4.573 4.571-4.573 4.571c-0.915 0.915 1.829 3.656 2.744 2.742l4.573-4.571 4.573 4.571c0.915 0.915 3.658-1.829 2.744-2.742l-4.573-4.571 4.573-4.571c0.915-0.915-1.829-3.656-2.744-2.742l-4.573 4.571-4.573-4.571c-0.173-0.171-0.394-0.223-0.657-0.173v0zM16 1c-8.285 0-15 6.716-15 15s6.715 15 15 15 15-6.716 15-15-6.715-15-15-15zM16 4.75c6.213 0 11.25 5.037 11.25 11.25s-5.037 11.25-11.25 11.25-11.25-5.037-11.25-11.25c0.001-6.213 5.037-11.25 11.25-11.25z"></path> 
                                        </g>
                                    </svg>
                                </button>
                            </form>
                            <div class="advertisement-head">
                                <h3 class="advertisement-title">@advertisement.Title</h3>
                                <span class="advertisement-date">@advertisement.PublishDate.ToString("yyyy-MM-dd")</span>
                            </div>
                            
                            <p class="advertisement-text">
                                @advertisement.Description
                            </p>
                            <div class="advertisement-author">
                                Автор: @advertisement.User.LastName @advertisement.User.FirstName
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>

        <div class="dashboard-card">
            <div class="dashboard-card-title">
                <div>
                    <h3>Задачи</h3>
                    <p>Текущие задания для IT-отдела</p>
                </div>
                <button class="dashboard-card-button" onclick="openTaskModal()">
                    <svg width="1rem" height="1rem" class="w-6 h-6 text-red-500">
                        <use href="#icon-plus"></use>
                    </svg>
                    Добавить
                </button>
            </div>
            <div class="dashboard-card-body">
                <div>
                    <div class="task-tab-list">
                        <button class="task-tab-button active" data-tab="all" role="tab" aria-selected="true">Все</button>
                        <button class="task-tab-button" role="tab" data-tab="inprogress">В работе</button>
                        <button class="task-tab-button" role="tab" data-tab="completed">Выполнено</button>
                    </div>
                </div>

                <div id="tabContents">
                    <div class="task-tab-content active" id="tab-all">
                        @foreach (TaskModel task in allTasks)
                        {
                            <div class=task-record>
                                <div class="task-record-container">
                                    <div class="task-record-head">
                                        <div>
                                            <h4>@task.Title</h4>
                                            <p>@task.Description</p>
                                        </div>
                                        <div class="task-record-difficult @(task.Difficult.Equals("Средний") ? "medium" : task.Difficult.Equals("Срочно") ? "hard" : "low")">
                                            @task.Difficult
                                        </div>
                                    </div>
                                    <div class="task-record-date-status">
                                        <span class="task-record-date">Срок: @task.DeadLine.ToString("MM/dd/yyyy")</span>
                                        <div class="task-record-status @(task.Status.Equals("Выполнено") ? "done" : task.Status.Equals("В процессе") ? "inprogress" : "waiting")">@task.Status</div>
                                    </div>
                                    @if (task.Status != "Выполнено")
                                    {
                                        <form asp-action="SetCompleted" asp-controller="Task" asp-route-id="@task.Id" method="post">
                                            <button class="task-record-button" type="submit">
                                                <svg style="color: black" class="icon" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-check h-4 w-4 mr-1" data-lov-id="src/pages/Dashboard.tsx:275:26" data-lov-name="Check" data-component-path="src/pages/Dashboard.tsx" data-component-line="275" data-component-file="Dashboard.tsx" data-component-name="Check" data-component-content="%7B%22className%22%3A%22h-4%20w-4%20mr-1%22%7D"><path d="M20 6 9 17l-5-5"></path></svg>
                                                Отметить как выполненное
                                            </button>
                                        </form>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                    <div class="task-tab-content" id="tab-inprogress">
                        @foreach (TaskModel task in inWorkTasks)
                        {
                            <div class=task-record>
                                <div class="task-record-container">
                                    <div class="task-record-head">
                                        <div>
                                            <h4>@task.Title</h4>
                                            <p>@task.Description</p>
                                        </div>
                                        <div class="task-record-difficult @(task.Difficult.Equals("Средний") ? "medium" : task.Difficult.Equals("Срочно") ? "hard" : "low")">
                                            @task.Difficult
                                        </div>
                                    </div>
                                    <div class="task-record-date-status">
                                        <span class="task-record-date">Срок: @task.DeadLine.ToString("MM/dd/yyyy")</span>
                                        <div class="task-record-status inprogress">@task.Status</div>
                                    </div>
                                    <form asp-action="SetCompleted" asp-controller="Task" asp-route-id="@task.Id" method="post">
                                        <button class="task-record-button" type="submit">
                                            <svg style="color: black" class="icon" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-check h-4 w-4 mr-1" data-lov-id="src/pages/Dashboard.tsx:275:26" data-lov-name="Check" data-component-path="src/pages/Dashboard.tsx" data-component-line="275" data-component-file="Dashboard.tsx" data-component-name="Check" data-component-content="%7B%22className%22%3A%22h-4%20w-4%20mr-1%22%7D"><path d="M20 6 9 17l-5-5"></path></svg>
                                            Отметить как выполненное
                                        </button>
                                    </form>
                                </div>
                            </div>
                        }
                    </div>
                    <div class="task-tab-content" id="tab-completed">
                        @foreach (TaskModel task in completedTasks)
                        {
                            <div class=task-record>
                                <div class="task-record-container">
                                    <div class="task-record-head">
                                        <div>
                                            <h4>@task.Title</h4>
                                            <p>@task.Description</p>
                                        </div>
                                        <div class="task-record-difficult @(task.Difficult.Equals("Средний") ? "medium" : task.Difficult.Equals("Срочно") ? "hard" : "low")">
                                            @task.Difficult
                                        </div>
                                    </div>
                                    <div class="task-record-date-status">
                                        <span class="task-record-date">Срок: @task.DeadLine.ToString("MM/dd/yyyy")</span>
                                        <div class="task-record-status done">@task.Status</div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
                <div class="modal" id="addTaskModal">
                    <div class="modal-content">
                        <div>
                            <h2>Новая задача</h2>
                            <p>Создайте новую задачу для IT-отдела</p>
                        </div>
                        <form asp-controller="Task" asp-action="Create" method="post">
                            <div class="modal-advertisement-form">
                                <div>
                                    <label for="title">Название</label>
                                    <input type="text" id="title" name="Title" required />
                                </div>
                                <div>
                                    <label for="description">Описание</label>
                                    <textarea id="description" name="Description" required></textarea>
                                </div>
                                <div>
                                    <label>Приоритет</label>
                                    <select id="difficult" name="Difficult">
                                        <option value="Низкий">Низкий</option>
                                        <option value="Средний">Средний</option>
                                        <option value="Срочно">Срочно</option>
                                    </select>
                                </div>
                                <div>
                                    <label for="deadline">Срок выполнения</label>
                                    <input type="date" id="deadline" name="DeadLine" required />
                                </div>
                            </div>
                            <div style="justify-content: flex-end; flex-direction: row; display: flex;">
                                <button type="button" class="button cancel-modal" onclick="closeTaskModal()">Отменить</button>
                                <button type="submit" class="button submit-advertisement">Сохранить</button>
                            </div>
                        </form>

                        <button class="modal-close" onclick="closeTaskModal()">&times;</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @* @if (User.Identity.IsAuthenticated)
    {
        <a asp-action="Logout" asp-controller="Auth">Выход</a>
    }
    else
    {
        <a asp-action="Register" asp-controller="Auth">Регистрация</a>
        <a asp-action="Login" asp-controller="Auth">Вход</a>
    } *@

</div>

@section Scripts {
    <script>
        document.querySelectorAll('.task-tab-button').forEach(button => {
            button.addEventListener('click', () => {
                // Меняем активную кнопку
                document.querySelectorAll('.task-tab-button').forEach(btn => btn.classList.remove('active'));
                button.classList.add('active');

                // Меняем активное содержимое
                const tab = button.getAttribute('data-tab');

                document.querySelectorAll('.task-tab-content').forEach(content => {
                    content.classList.remove('active');
                });

                document.getElementById('tab-' + tab).classList.add('active');
            });
        });
    </script>

    <script>
        function openModalAdvertisement() {
            document.getElementById('addAnnouncementModal').classList.add('active');
        }

        function closeModal() {
            document.getElementById('addAnnouncementModal').classList.remove('active');
        }

        // Закрытие модального окна при клике вне контента
        document.getElementById('addAnnouncementModal').addEventListener('click', function(e) {
            if (e.target === this) {
                closeModal();
            }
        });

        function openTaskModal() {
            document.getElementById('addTaskModal').classList.add('active');
        }

        function closeTaskModal() {
            document.getElementById('addTaskModal').classList.remove('active');
        }

        // Закрытие модального окна при клике вне контента
        document.getElementById('addTaskModal').addEventListener('click', function(e) {
            if (e.target === this) {
                closeTaskModal();
            }
        });
    </script>
}
