@model List<TaskModel>
@{
    List<TaskModel> allTasks = ViewBag.Tasks;
    List<TaskModel> waitingTasks = ViewBag.WaitingTasks;
    List<TaskModel> inWorkTasks = ViewBag.InWorkTasks;
    List<TaskModel> completedTasks = ViewBag.CompletedTasks;
}
<head>
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
</head>

<div class="dashboard-card">
    <div class="dashboard-card-title">
        <div>
            <h3>Задачи</h3>
            <p>Текущие задания для IT-отдела</p>
        </div>
        <button class="dashboard-card-button" onclick="openTaskModal()">
            <svg width="1rem" height="1rem" class="w-6 h-6 text-red-500">
                <use href="#icon-plus"></use>
            </svg>
            Добавить
        </button>
    </div>
    <div class="dashboard-card-body">
        <div>
            <div class="task-tab-list">
                <button class="task-tab-button active" data-tab="all" role="tab" aria-selected="true">Все</button>
                <button class="task-tab-button" role="tab" data-tab="inprogress">В работе</button>
                <button class="task-tab-button" role="tab" data-tab="completed">Выполнено</button>
            </div>
        </div>

        <div id="tabContents">
            <div class="task-tab-content active" id="tab-all">
                @foreach (TaskModel task in allTasks)
                {
                    <div class=task-record>
                        <div class="task-record-container">
                            <div class="task-record-head">
                                <div>
                                    <h4>@task.Title</h4>
                                    <p>@task.Description</p>
                                </div>
                                <div class="task-record-difficult @(task.Difficult.Equals("Средний") ? "medium" : task.Difficult.Equals("Срочно") ? "hard" : "low")">
                                    @task.Difficult
                                </div>
                            </div>
                            <div class="task-record-date-status">
                                <span class="task-record-date">Срок: @task.DeadLine.ToString("MM/dd/yyyy")</span>
                                <div class="task-record-status @(task.Status.Equals("Выполнено") ? "done" : task.Status.Equals("В работе") ? "inprogress" : "waiting")">@task.Status</div>
                            </div>
                            @if (ViewBag.SectionName.Equals("IT-отдел") || User.IsInRole("Admin"))
                            {
                                @if (task.Status == "Ожидает")
                                {
                                    <form asp-action="SetInWork" asp-controller="Task" asp-route-id="@task.Id" method="post">
                                        <button class="task-record-button" type="submit">
                                            Взять в работу
                                        </button>
                                    </form>
                                }
                                @if (task.Status == "В работе")
                                {
                                    <form asp-action="SetCompleted" asp-controller="Task" asp-route-id="@task.Id" method="post">
                                        <button class="task-record-button" type="submit" style="background: linear-gradient(160deg, #DAFFE8 0%, #81FFB0 100%)">
                                            <svg style=" class="icon" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-check h-4 w-4 mr-1" data-lov-id="src/pages/Dashboard.tsx:275:26" data-lov-name="Check" data-component-path="src/pages/Dashboard.tsx" data-component-line="275" data-component-file="Dashboard.tsx" data-component-name="Check" data-component-content="%7B%22className%22%3A%22h-4%20w-4%20mr-1%22%7D"><path d="M20 6 9 17l-5-5"></path></svg>
                                            Отметить как выполненное
                                        </button>
                                    </form>
                                }
                            }

                        </div>
                    </div>
                }
            </div>
            <div class="task-tab-content" id="tab-inprogress">
                @foreach (TaskModel task in inWorkTasks)
                {
                    <div class=task-record>
                        <div class="task-record-container">
                            <div class="task-record-head">
                                <div>
                                    <h4>@task.Title</h4>
                                    <p>@task.Description</p>
                                </div>
                                <div class="task-record-difficult @(task.Difficult.Equals("Средний") ? "medium" : task.Difficult.Equals("Срочно") ? "hard" : "low")">
                                    @task.Difficult
                                </div>
                            </div>
                            <div class="task-record-date-status">
                                <span class="task-record-date">Срок: @task.DeadLine.ToString("MM/dd/yyyy")</span>
                                <div class="task-record-status inprogress">@task.Status</div>
                            </div>
                            @if (ViewBag.SectionName.Equals("IT-отдел") || User.IsInRole("Admin"))
                            {
                                <form asp-action="SetCompleted" asp-controller="Task" asp-route-id="@task.Id" method="post">
                                    <button class="task-record-button" type="submit" style="border-color: #15803d; color: white; background-color: #15803d">
                                        <svg style="color: white" class="icon" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-check h-4 w-4 mr-1" data-lov-id="src/pages/Dashboard.tsx:275:26" data-lov-name="Check" data-component-path="src/pages/Dashboard.tsx" data-component-line="275" data-component-file="Dashboard.tsx" data-component-name="Check" data-component-content="%7B%22className%22%3A%22h-4%20w-4%20mr-1%22%7D"><path d="M20 6 9 17l-5-5"></path></svg>
                                        Отметить как выполненное
                                    </button>
                                </form>
                            }
                        </div>
                    </div>
                }
            </div>
            <div class="task-tab-content" id="tab-completed">
                @foreach (TaskModel task in completedTasks)
                {
                    <div class=task-record>
                        <div class="task-record-container">
                            <div class="task-record-head">
                                <div>
                                    <h4>@task.Title</h4>
                                    <p>@task.Description</p>
                                </div>
                                <div class="task-record-difficult @(task.Difficult.Equals("Средний") ? "medium" : task.Difficult.Equals("Срочно") ? "hard" : "low")">
                                    @task.Difficult
                                </div>
                            </div>
                            <div class="task-record-date-status">
                                <span class="task-record-date">Срок: @task.DeadLine.ToString("MM/dd/yyyy")</span>
                                <div class="task-record-status done">@task.Status</div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
        <div class="modal" id="addTaskModal">
            <div class="modal-content">
                <div>
                    <h2>Новая задача</h2>
                    <p>Создайте новую задачу для IT-отдела</p>
                </div>
                <form asp-controller="Task" asp-action="Create" method="post">
                    <div class="modal-advertisement-form">
                        <div>
                            <label for="title">Название</label>
                            <input type="text" id="title" name="Title" required />
                        </div>
                        <div>
                            <label for="description">Описание</label>
                            <textarea id="description" name="Description" required></textarea>
                        </div>
                        <div>
                            <label>Приоритет</label>
                            <select id="difficult" name="Difficult">
                                <option value="Низкий">Низкий</option>
                                <option value="Средний">Средний</option>
                                <option value="Срочно">Срочно</option>
                            </select>
                        </div>
                        <div>
                            <label for="deadline">Срок выполнения</label>
                            <input type="date" id="deadline" name="DeadLine" required />
                        </div>
                    </div>
                    <div style="justify-content: flex-end; flex-direction: row; display: flex;">
                        <button type="button" class="button cancel-modal" onclick="closeTaskModal()">Отменить</button>
                        <button type="submit" class="button submit-advertisement">Сохранить</button>
                    </div>
                </form>

                <button class="modal-close" onclick="closeTaskModal()">&times;</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.querySelectorAll('.task-tab-button').forEach(button => {
            button.addEventListener('click', () => {
                // Меняем активную кнопку
                document.querySelectorAll('.task-tab-button').forEach(btn => btn.classList.remove('active'));
                button.classList.add('active');

                // Меняем активное содержимое
                const tab = button.getAttribute('data-tab');

                document.querySelectorAll('.task-tab-content').forEach(content => {
                    content.classList.remove('active');
                });

                document.getElementById('tab-' + tab).classList.add('active');
            });
        });
    </script>

    <script>
        function openModalAdvertisement() {
            document.getElementById('addAnnouncementModal').classList.add('active');
        }

        function closeModal() {
            document.getElementById('addAnnouncementModal').classList.remove('active');
        }

        // Закрытие модального окна при клике вне контента
        document.getElementById('addAnnouncementModal').addEventListener('click', function(e) {
            if (e.target === this) {
                closeModal();
            }
        });

        function openTaskModal() {
            document.getElementById('addTaskModal').classList.add('active');
        }

        function closeTaskModal() {
            document.getElementById('addTaskModal').classList.remove('active');
        }

        // Закрытие модального окна при клике вне контента
        document.getElementById('addTaskModal').addEventListener('click', function(e) {
            if (e.target === this) {
                closeTaskModal();
            }
        });
    </script>
                    }