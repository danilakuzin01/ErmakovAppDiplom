@{
    List<Floor> floors = ViewBag.Floors;
    List<SubLocation> locations = ViewBag.Locations;
    List<Category> categories = ViewBag.Categories;
    List<EquipmentItem> items = ViewBag.EquipmentItems;
}

<head>
    <link rel="stylesheet" href="~/css/map.css" />

</head>

<div>
    <div class="Card">
        <div class="card-header">
            <div>
                <h3>
                    Карта офиса
                </h3>
                <p>
                    Схема расположения оборудования
                </p>
            </div>
            <div class="functional-buttons-container">
                <button>
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-square-pen h-4 w-4 mr-1" data-lov-id="src/pages/OfficeMap.tsx:1055:18" data-lov-name="Edit" data-component-path="src/pages/OfficeMap.tsx" data-component-line="1055" data-component-file="OfficeMap.tsx" data-component-name="Edit" data-component-content="%7B%22className%22%3A%22h-4%20w-4%20mr-1%22%7D"><path d="M12 3H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7"></path><path d="M18.375 2.625a1 1 0 0 1 3 3l-9.013 9.014a2 2 0 0 1-.853.505l-2.873.84a.5.5 0 0 1-.62-.62l.84-2.873a2 2 0 0 1 .506-.852z"></path></svg>
                    Редактировать устройства
                </button>
                <button>
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-building h-4 w-4 mr-1" data-lov-id="src/pages/OfficeMap.tsx:1065:18" data-lov-name="Building" data-component-path="src/pages/OfficeMap.tsx" data-component-line="1065" data-component-file="OfficeMap.tsx" data-component-name="Building" data-component-content="%7B%22className%22%3A%22h-4%20w-4%20mr-1%22%7D"><rect width="16" height="20" x="4" y="2" rx="2" ry="2"></rect><path d="M9 22v-4h6v4"></path><path d="M8 6h.01"></path><path d="M16 6h.01"></path><path d="M12 6h.01"></path><path d="M12 10h.01"></path><path d="M12 14h.01"></path><path d="M16 10h.01"></path><path d="M16 14h.01"></path><path d="M8 10h.01"></path><path d="M8 14h.01"></path></svg>
                    Изменить планировку
                </button>
            </div>
        </div>

        <div style="padding: 1.5rem; padding-top: 0">
            <div style="justify-content: space-between; display: flex; margin-bottom: 1rem;">
                <div style="width: 100%">
                    <div class="tabs-container" style="grid-template-columns: repeat(@floors.Count, minmax(0, 1fr))">
                        @foreach (Floor floor in floors)
                        {
                            <button class="floor-button @(floor.Id == floors.First().Id ? "active" : "")"
                            data-tab="floor @floor.Id">
                                @floor.Name
                            </button>
                        }
                    </div>
                </div>
            </div>

            @foreach (Floor floor in floors)
            {
                <div class="tab-content @(floor.Id == floors.First().Id ? "active" : "") task-tab-content"
                id="tab-floor @floor.Id">
                    <div class="tab-map-content">
                        <div class="map">
                            <div class="content">
                                @foreach (SubLocation location in locations.Where(l => l.Floor.Id == floor.Id))
                                {
                                    <div class="location"
                                    style="width: @(location.Width)px;
                                        height: @(location.Height)px;
                                        top: @(location.PositionY)px;
                                        left: @(location.PositionX)px;">
                                        <div class="location-name">
                                            @location.Name
                                        </div>
                                    </div>
                                }
                                @foreach(EquipmentItem item in items.Where(i => i.SubLocation.Floor.Id == floor.Id))
                                {
                                    <div style="z-index:2; position: absolute; left: @(item.PositionX)px; top: @(item.PositionY)px;">
                                        <div class="item-container @(item.Status.Equals("Работает") ? "worked" : "danger")">
                                            <div class="item @(item.Status == "Работает" ? "worked" : "danger")">
                                                <svg class="w-6 h-6 text-red-500 icon-svg">
                                                    @if (item.Category.Name.Equals("Компьютер") || item.Name.Equals("Монитор"))
                                                    {
                                                        <use href="#icon-computer" />
                                                    }
                                                    else if (item.Category.Name.Equals("Принтер"))
                                                    {
                                                        <use href="#icon-printer" />
                                                    }
                                                    else if (item.Category.Name.Equals("Сервер"))
                                                    {
                                                        <use href="#icon-server" />
                                                    }
                                                    else if (item.Category.Name.Equals("Сетевое оборудование"))
                                                    {
                                                        <use href="#icon-internet-settings" />
                                                    }
                                                </svg>
                                            </div>
                                        </div>
                                   </div>
                                }
                            </div>
                        </div>

                    </div>
                </div>
            }
            <div class="legend-footer">
                @foreach (Category category in categories)
                {
                    <div style="display: flex; align-items: center; gap: .5rem;">
                        <div class="icon-container-wrapper">
                            <div class="icon-container">
                                <svg class="w-6 h-6 text-red-500 icon-svg">
                                        @if (category.Name.Equals("Компьютер") || category.Name.Equals("Монитор"))
                                        {
                                            <use href="#icon-computer" />
                                        }
                                        else if (category.Name.Equals("Принтер"))
                                        {
                                            <use href="#icon-printer" />
                                        }
                                        else if (category.Name.Equals("Сервер"))
                                        {
                                            <use href="#icon-server" />
                                        }
                                        else if (category.Name.Equals("Сетевое оборудование"))
                                        {

                                            <use href="#icon-internet-settings" />
                                        }
                                </svg>
                            </div>
                        </div>
                        <span>@category.Name</span>
                    </div>
                }
                
                
            </div>
        </div>

        @section Scripts {
            <script>
                document.querySelectorAll('.floor-button').forEach(button => {
                    button.addEventListener('click', () => {
                        // Активная кнопка
                        document.querySelectorAll('.floor-button').forEach(btn => btn.classList.remove('active'));
                        button.classList.add('active');

                        // Активный контент
                        const tab = button.getAttribute('data-tab');

                        document.querySelectorAll('.task-tab-content').forEach(content => {
                            content.classList.remove('active');
                        });

                        console.log(tab)
                        const target = document.getElementById('tab-' + tab);
                        if (target) {
                            target.classList.add('active');
                        }
                    });
                });
            </script>
        }
